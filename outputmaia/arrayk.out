
TINY COMPILATION: ../example/arrayk.cm
1: void main(void) {
	1: reserved word: void
	1: ID, name= main
	1: (
	1: reserved word: void
	1: )
	1: {
2:     int x[5];
	2: reserved word: int
	2: ID, name= x
	2: [
	2: NUM, val= 5
	2: ]
	2: ;
3: }
	3: }
	3: EOF

Syntax tree:
Declare function (return type "void"): main
        Declare int array: x
        Const: 5

Building Symbol Table...

Symbol table:

Variable Name  Scope     ID Type  Data Type  Line Numbers
-------------  --------  -------  ---------  -------------------------
main                     fun      void        1 
input                    fun      int        
output                   fun      void       
x              main      array    int         2 

Checking Types...

Type Checking Finished
* TINY Compilation to TM Code
* Standard prelude:
  0:     LD  6,0(0) 	load maxaddress from location 0
  1:     LD  2,0(0) 	load maxaddress from location 0
  2:     ST  0,0(0) 	clear location 0
* End of standard prelude.
* -> Init Function (main)
  3:    LDA  7,0(7) 	jump to main
* -> declare vector
  4:    LDA  0,-2(2) 	guard addr of vector
  5:     ST  0,-2(2) 	store addr of vector
* <- declare vector
* <- End Function
* End of execution.
  6:   HALT  0,0,0 	
